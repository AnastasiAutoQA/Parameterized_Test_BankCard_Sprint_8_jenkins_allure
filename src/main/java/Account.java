public class Account {
    private String name;

    public Account(String name) {
        this.name = name;
    }

    /* Этот метод должен проверять, что сохранённая через конструктор строка соответствует требованиям.
    Если строка удовлетворяет условиям, метод возвращает true, иначе — false.
    - Длина имени должна быть не менее 3 и не более 19 символов.
    - Строка не должна начинаться и заканчиваться пробелом.
    - Строка может содержать только один пробел.
    */
    public boolean checkNameToEmboss() {
        if (name.matches("^(?!\\s)(?!.*\\s{2})(?!.*\\s.*\\s)(?=.*\\s)(?!.*\\s$)[\\w\\s]{3,19}$")) // Плюс ко всем условиям допускается только латиница
                 //&& name.charAt(name.length()-1) != ' ')
        {
            System.out.println("Печать на карте разрешена. Имя Фамилия соответствуют условиям.");
            return true;
        } else {
            System.out.println("Длина имени должна быть не менее 3 и не более 19 символов.\nСтрока не должна начинаться и заканчиваться пробелом.\nСтрока может содержать только один пробел.");
            return false;
        }
    }
// if (name.matches("^(?!\s)(?!.*\s{2})(?!.*\s.*\s)(?=.*\s)(?!.*\s$)[\\p{L}\\d\\s]{3,19}$") // Плюс ко всем условиям - допускается и латиница, и кириллица
}

       /* Что значит это все в regex:
        - ^ - начало строки
        - (?!\\s) - строка не должна начинаться с пробела
        - (?!.*\\s{2}) - строка не должна содержать два пробела подряд
        - (?=.*\\s) - в строке должен быть хотя бы один пробел
        - (?!.*\s.*\s) - несколько пробелов, разделённые словами
                Давайте разберем выражение по частям:
                - (?! - начало негативного просмотра вперед
                - .*\s - любое количество любых символов, за которыми следует одиночный пробел
                - .*\s - любое количество любых символов, за которыми следует одиночный пробел
        - [\\w\\s]{3,19} - допустимые символы в строке: буквы, цифры, пробелы, от 3 до 19 символов
        - $ - конец строки*/
